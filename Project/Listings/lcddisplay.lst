C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCDDISPLAY
OBJECT MODULE PLACED IN .\Objects\lcddisplay.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\hardware\LCDdisplay\lcddisplay.c LARGE OPTIMIZE(8,SPEED) BR
                    -OWSE INCDIR(..\hardware\DELAY;..\hardware\ADC;..\hardware\Flash;..\hardware\Uart;..\hardware\Key;..\hardware\Pwm;..\hard
                    -ware\WDT;..\hardware\Timer;..\hardware\LCDdisplay;..\hardware\PID;..\hardware\TUYA) DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -lcddisplay.lst) TABS(2) OBJECT(.\Objects\lcddisplay.obj)

line level    source

   1          #include "lcddisplay.h"
   2          #include "flash.h"
   3          #include "key.h"
   4          #include "timer.h"
   5          
   6          display_set lcd_set = {0,0};
   7          
   8          unsigned char guc_DisFreshStep = 0;
   9          unsigned char LCD_STD = 0;
  10          void set_gap ( u8 gap );
  11          void set_time ( u8 temp );
  12          
  13          void LCD_Init ( void )
  14          {
  15   1        /***********************************LCD配置初始化**************************************/
  16   1        LCDCON |= 0xE8;                     //使能LCD，50K电阻，1/3bias
  17   1        COMP1EN |= 0x06;                    //COM使能P11 P12
  18   1        COMP2EN |= 0x08;                    //COM使能P23
  19   1        COMP3EN |= 0x10;                    //COM使能P34
  20   1      
  21   1        SEGP1EN |= 0xF8;                    //SEG口使能P1口，P17 P16 P15 P14 P13 为SEG1 SEG2 SEG3 SEG4 SEG5
  22   1      
  23   1        SEG1 = 0;
  24   1        SEG2 = 0;
  25   1        SEG3 = 0;
  26   1        SEG4 = 0;
  27   1        SEG5 = 0;
  28   1      }
  29          
  30          void lcd_off(u8 std)
  31          {
  32   1       LCD_STD = std;
  33   1      }
  34          
  35          void lcd_clear_all ( void )
  36          {
  37   1        
  38   1        lcd_set.gap_display = Clear_lcd;
  39   1        lcd_set.time_display = Clear_lcd;
  40   1      }
  41          void lcd_error ( void )
  42          {
  43   1        static u8 error_std = 0;
  44   1        if ( error_std == 0 )
  45   1        {
  46   2          
  47   2          lcd_set.gap_display = Clear_lcd;
  48   2          lcd_set.time_display = Clear_lcd;
  49   2          led_set_off();
  50   2          error_std = 1;
  51   2        }
  52   1        else if ( error_std == 1 )
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 2   

  53   1        {
  54   2          
  55   2          lcd_set.gap_display = Error;
  56   2          led_set_on();
  57   2          error_std = 0;
  58   2        }
  59   1      
  60   1      }
  61          
  62          void lcd_cailbration ( void )
  63          {
  64   1        static u8 cailbration_std = 0;
  65   1        if ( cailbration_std == 0 )
  66   1        {
  67   2          
  68   2          lcd_set.gap_display = Clear_lcd;
  69   2          lcd_set.time_display = Clear_lcd;
  70   2          cailbration_std = 1;
  71   2        }
  72   1        else if ( cailbration_std == 1 )
  73   1        {
  74   2          
  75   2          lcd_set.gap_display = GAP_WARM_temp;
  76   2          cailbration_std = 0;
  77   2        }
  78   1      
  79   1      }
  80          
  81          void lcd_display_time ( u8 time )
  82          {
  83   1        
  84   1        lcd_set.time_display = time;
  85   1      }
  86          
  87          void lcd_display_gap ( u8 gap )
  88          {
  89   1       
  90   1        lcd_set.gap_display = gap;
  91   1      
  92   1      }
  93          void lcd_display_On ( void )
  94          {
  95   1      
  96   1        lcd_set.gap_display = all_on;
  97   1        lcd_set.time_display = all_on;
  98   1      }
  99          
 100          
 101          
 102          
 103          void LCD_Display ( void )
 104          {
 105   1       if ( (LCD_STD == ON)||(LCD_STD == Error)||(calibration_std == 1))
 106   1         {
 107   2           LCDCON |= 0xE8;
 108   2        switch ( guc_DisFreshStep )
 109   2        {
 110   3          case Frame0_COM0:
 111   3          
 112   3          LCDCON &=~ 0x10;   //FRAME 0
 113   3      
 114   3            COM0 = 1;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 3   

 115   3            COM1 = 0;
 116   3            COM2 = 0;
 117   3            COM3 = 0;
 118   3      
 119   3            set_time ( lcd_set.time_display );
 120   3            set_gap ( lcd_set.gap_display );
 121   3            guc_DisFreshStep = Frame0_COM1;
 122   3            break;
 123   3          case Frame0_COM1:
 124   3            COM0 = 0;
 125   3            COM1 = 1;
 126   3            COM2 = 0;
 127   3            COM3 = 0;
 128   3            set_time ( lcd_set.time_display );
 129   3            set_gap ( lcd_set.gap_display );
 130   3            guc_DisFreshStep = Frame0_COM2;
 131   3            break;
 132   3          case Frame0_COM2:
 133   3      
 134   3            COM0 = 0;
 135   3            COM1 = 0;
 136   3            COM2 = 1;
 137   3            COM3 = 0;
 138   3      
 139   3            set_time ( lcd_set.time_display );
 140   3            set_gap ( lcd_set.gap_display );
 141   3            guc_DisFreshStep = Frame0_COM3;
 142   3            break;
 143   3          case Frame0_COM3:
 144   3      
 145   3            COM0 = 0;
 146   3            COM1 = 0;
 147   3            COM2 = 0;
 148   3            COM3 = 1;
 149   3            set_time ( lcd_set.time_display );
 150   3      
 151   3            set_gap ( lcd_set.gap_display );
 152   3            guc_DisFreshStep = Frame1_COM0;
 153   3            break;
 154   3          case Frame1_COM0:
 155   3            LCDCON |= 0x10;   //FRAME 1
 156   3      
 157   3            COM0 = 1;
 158   3            COM1 = 0;
 159   3            COM2 = 0;
 160   3            COM3 = 0;
 161   3      
 162   3      
 163   3            set_time ( lcd_set.time_display );
 164   3      
 165   3            set_gap ( lcd_set.gap_display );
 166   3      
 167   3            guc_DisFreshStep = Frame1_COM1;
 168   3            break;
 169   3          case Frame1_COM1:
 170   3      
 171   3            COM0 = 0;
 172   3            COM1 = 1;
 173   3            COM2 = 0;
 174   3            COM3 = 0;
 175   3            set_time ( lcd_set.time_display );
 176   3      
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 4   

 177   3            set_gap ( lcd_set.gap_display );
 178   3            guc_DisFreshStep = Frame1_COM2;
 179   3            break;
 180   3          case Frame1_COM2:
 181   3      
 182   3            COM0 = 0;
 183   3            COM1 = 0;
 184   3            COM2 = 1;
 185   3            COM3 = 0;
 186   3            set_time ( lcd_set.time_display );
 187   3            set_gap ( lcd_set.gap_display );
 188   3            guc_DisFreshStep = Frame1_COM3;
 189   3            break;
 190   3          case Frame1_COM3:
 191   3      
 192   3            COM0 = 0;
 193   3            COM1 = 0;
 194   3            COM2 = 0;
 195   3            COM3 = 1;
 196   3      
 197   3      
 198   3            set_time ( lcd_set.time_display );
 199   3      
 200   3            set_gap ( lcd_set.gap_display );
 201   3      
 202   3            guc_DisFreshStep = Frame0_COM0;
 203   3            break;
 204   3          default:
 205   3            guc_DisFreshStep = Frame0_COM0;
 206   3            break;
 207   3        }
 208   2       }
 209   1       else if (LCD_STD == OFF)
 210   1       {
 211   2          LCDCON = 0x68;
 212   2       }
 213   1      }
 214          
 215          //void LCD_Display_seg ( void )
 216          //{
 217          //
 218          //  switch ( guc_DisFreshStep )
 219          //  {
 220          //    case Frame0_SEG1:
 221          //      LCDCON &=~ 0x10;   //FRAME 0
 222          //
 223          //      SEG1 = 0;
 224          //      SEG2 = 0;
 225          //      SEG3 = 0;
 226          //      SEG4 = 0;
 227          //      SEG5 = 1;
 228          //
 229          //      COM0 = 0;
 230          //      COM1 = 0;
 231          //      COM2 = 1;
 232          //      COM3 = 0;
 233          //
 234          //
 235          //      guc_DisFreshStep = Frame0_SEG2;
 236          //      break;
 237          //    case Frame0_SEG2:
 238          //      SEG1 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 5   

 239          //      SEG2 = 0;
 240          //      SEG3 = 0;
 241          //      SEG4 = 1;
 242          //      SEG5 = 0;
 243          //
 244          //      COM0 = 0;
 245          //      COM1 = 1;
 246          //      COM2 = 1;
 247          //      COM3 = 1;
 248          //      guc_DisFreshStep = Frame0_SEG3;
 249          //      break;
 250          //    case Frame0_SEG3:
 251          //      SEG1 = 0;
 252          //      SEG2 = 0;
 253          //      SEG3 = 1;
 254          //      SEG4 = 0;
 255          //      SEG5 = 0;
 256          //
 257          //      COM0 = 1;
 258          //      COM1 = 1;
 259          //      COM2 = 1;
 260          //      COM3 = 1;
 261          //
 262          //      guc_DisFreshStep = Frame0_SEG4;
 263          //      break;
 264          //    case Frame0_SEG4:
 265          //      SEG1 = 0;
 266          //      SEG2 = 1;
 267          //      SEG3 = 0;
 268          //      SEG4 = 0;
 269          //      SEG5 = 0;
 270          //
 271          //
 272          //      COM0 = 0;
 273          //      COM1 = 0;
 274          //      COM2 = 0;
 275          //      COM3 = 0;
 276          //      guc_DisFreshStep = Frame0_SEG5;
 277          //      break;
 278          //    case Frame0_SEG5:
 279          //      SEG1 = 1;
 280          //      SEG2 = 0;
 281          //      SEG3 = 0;
 282          //      SEG4 = 0;
 283          //      SEG5 = 0;
 284          //
 285          //
 286          //      COM0 = 0;
 287          //      COM1 = 0;
 288          //      COM2 = 0;
 289          //      COM3 = 0;
 290          //      guc_DisFreshStep = Frame1_SEG1;
 291          //      break;
 292          //    case Frame1_SEG1:
 293          //      LCDCON |= 0x10;   //FRAME 1
 294          //      SEG1 = 0;
 295          //      SEG2 = 0;
 296          //      SEG3 = 0;
 297          //      SEG4 = 0;
 298          //      SEG5 = 1;
 299          //
 300          //
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 6   

 301          //
 302          //
 303          //
 304          //      COM0 = 0;
 305          //      COM1 = 0;
 306          //      COM2 = 0;
 307          //      COM3 = 0;
 308          //
 309          //      guc_DisFreshStep = Frame1_SEG2;
 310          //      break;
 311          //    case Frame1_SEG2:
 312          //      SEG1 = 0;
 313          //      SEG2 = 0;
 314          //      SEG3 = 0;
 315          //      SEG4 = 1;
 316          //      SEG5 = 0;
 317          //
 318          //
 319          //      COM0 = 0;
 320          //      COM1 = 1;
 321          //      COM2 = 1;
 322          //      COM3 = 1;
 323          //
 324          //      guc_DisFreshStep = Frame1_SEG3;
 325          //      break;
 326          //    case Frame1_SEG3:
 327          //      SEG1 = 0;
 328          //      SEG2 = 0;
 329          //      SEG3 = 1;
 330          //      SEG4 = 0;
 331          //      SEG5 = 0;
 332          //
 333          //      COM0 = 1;
 334          //      COM1 = 1;
 335          //      COM2 = 1;
 336          //      COM3 = 1;
 337          //
 338          //
 339          //      guc_DisFreshStep = Frame1_SEG4;
 340          //      break;
 341          //    case Frame1_SEG4:
 342          //      SEG1 = 0;
 343          //      SEG2 = 1;
 344          //      SEG3 = 0;
 345          //      SEG4 = 0;
 346          //      SEG5 = 0;
 347          //
 348          //
 349          //
 350          //
 351          //      COM0 = 0;
 352          //      COM1 = 0;
 353          //      COM2 = 0;
 354          //      COM3 = 0;
 355          //
 356          //
 357          //      guc_DisFreshStep = Frame1_SEG5;
 358          //      break;
 359          //    case Frame1_SEG5:
 360          //      SEG1 = 1;
 361          //      SEG2 = 0;
 362          //      SEG3 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 7   

 363          //      SEG4 = 0;
 364          //      SEG5 = 0;
 365          //
 366          //
 367          //
 368          //      COM0 = 0;
 369          //      COM1 = 0;
 370          //      COM2 = 0;
 371          //      COM3 = 0;
 372          //
 373          //
 374          //
 375          //
 376          //      guc_DisFreshStep = Frame0_SEG1;
 377          //      break;
 378          //    default:
 379          //      guc_DisFreshStep = Frame0_SEG1;
 380          //      break;
 381          //  }
 382          //}
 383          
 384          
 385          //void set_time(void)
 386          //{
 387          //
 388          
 389          
 390          //}
 391          void set_gap ( u8 number )
 392          {
 393   1        switch ( number )
 394   1        {
 395   2          case GAP_WARM_temp:
 396   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 397   2            {
 398   3      
 399   3              SEG3 = 0;
 400   3              SEG4 = 0;
 401   3            }
 402   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 403   2            {
 404   3              SEG3 = 1;
 405   3              SEG4 = 1;
 406   3            }
 407   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 408   2            {
 409   3              SEG3 = 1;
 410   3              SEG4 = 1;
 411   3            }
 412   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 413   2            {
 414   3              SEG3 = 0;
 415   3              SEG4 = 1;
 416   3            }
 417   2      
 418   2            break;
 419   2          case GAP_1:
 420   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 421   2            {
 422   3      
 423   3              SEG3 = 0;
 424   3              SEG4 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 8   

 425   3            }
 426   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 427   2            {
 428   3              SEG3 = 1;
 429   3              SEG4 = 0;
 430   3            }
 431   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 432   2            {
 433   3              SEG3 = 1;
 434   3              SEG4 = 0;
 435   3            }
 436   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 437   2            {
 438   3              SEG3 = 0;
 439   3              SEG4 = 0;
 440   3            }
 441   2            break;
 442   2      
 443   2          case GAP_2:
 444   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 445   2            {
 446   3      
 447   3              SEG3 = 1;
 448   3              SEG4 = 0;
 449   3            }
 450   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 451   2            {
 452   3              SEG3 = 1;
 453   3              SEG4 = 0;
 454   3            }
 455   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 456   2            {
 457   3              SEG3 = 0;
 458   3              SEG4 = 1;
 459   3            }
 460   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 461   2            {
 462   3              SEG3 = 1;
 463   3              SEG4 = 1;
 464   3            }
 465   2            break;
 466   2      
 467   2          case GAP_3:
 468   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 469   2            {
 470   3      
 471   3              SEG3 = 1;
 472   3              SEG4 = 0;
 473   3            }
 474   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 475   2            {
 476   3              SEG3 = 1;
 477   3              SEG4 = 0;
 478   3            }
 479   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 480   2            {
 481   3              SEG3 = 1;
 482   3              SEG4 = 1;
 483   3            }
 484   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 485   2            {
 486   3              SEG3 = 1;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 9   

 487   3              SEG4 = 0;
 488   3            }
 489   2            break;
 490   2          case GAP_4:
 491   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 492   2            {
 493   3      
 494   3              SEG3 = 0;
 495   3              SEG4 = 0;
 496   3            }
 497   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 498   2            {
 499   3              SEG3 = 1;
 500   3              SEG4 = 1;
 501   3            }
 502   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 503   2            {
 504   3              SEG3 = 1;
 505   3              SEG4 = 1;
 506   3            }
 507   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 508   2            {
 509   3              SEG3 = 0;
 510   3              SEG4 = 0;
 511   3            }
 512   2            break;
 513   2          case GAP_5:
 514   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 515   2            {
 516   3      
 517   3              SEG3 = 1;
 518   3              SEG4 = 0;
 519   3            }
 520   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 521   2            {
 522   3              SEG3 = 0;
 523   3              SEG4 = 1;
 524   3            }
 525   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 526   2            {
 527   3              SEG3 = 1;
 528   3              SEG4 = 1;
 529   3            }
 530   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 531   2            {
 532   3              SEG3 = 1;
 533   3              SEG4 = 0;
 534   3            }
 535   2            break;
 536   2          case GAP_6:
 537   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 538   2            {
 539   3      
 540   3              SEG3 = 1;
 541   3              SEG4 = 0;
 542   3            }
 543   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 544   2            {
 545   3              SEG3 = 0;
 546   3              SEG4 = 1;
 547   3            }
 548   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 10  

 549   2            {
 550   3              SEG3 = 1;
 551   3              SEG4 = 1;
 552   3            }
 553   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 554   2            {
 555   3              SEG3 = 1;
 556   3              SEG4 = 1;
 557   3            }
 558   2            break;
 559   2          case GAP_7:
 560   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 561   2            {
 562   3      
 563   3              SEG3 = 1;
 564   3              SEG4 = 0;
 565   3            }
 566   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 567   2            {
 568   3              SEG3 = 1;
 569   3              SEG4 = 0;
 570   3            }
 571   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 572   2            {
 573   3              SEG3 = 1;
 574   3              SEG4 = 0;
 575   3            }
 576   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 577   2            {
 578   3              SEG3 = 0;
 579   3              SEG4 = 0;
 580   3            }
 581   2            break;
 582   2          case GAP_8:
 583   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 584   2            {
 585   3      
 586   3              SEG3 = 1;
 587   3              SEG4 = 0;
 588   3            }
 589   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 590   2            {
 591   3              SEG3 = 1;
 592   3              SEG4 = 1;
 593   3            }
 594   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 595   2            {
 596   3              SEG3 = 1;
 597   3              SEG4 = 1;
 598   3            }
 599   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 600   2            {
 601   3              SEG3 = 1;
 602   3              SEG4 = 1;
 603   3            }
 604   2            break;
 605   2          case GAP_9:
 606   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 607   2            {
 608   3      
 609   3              SEG3 = 1;
 610   3              SEG4 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 11  

 611   3            }
 612   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 613   2            {
 614   3              SEG3 = 1;
 615   3              SEG4 = 1;
 616   3            }
 617   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 618   2            {
 619   3              SEG3 = 1;
 620   3              SEG4 = 1;
 621   3            }
 622   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 623   2            {
 624   3              SEG3 = 1;
 625   3              SEG4 = 0;
 626   3            }
 627   2            break;
 628   2          case Error:
 629   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 630   2            {
 631   3      
 632   3              SEG3 = 1;
 633   3              SEG4 = 0;
 634   3            }
 635   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 636   2            {
 637   3              SEG3 = 0;
 638   3              SEG4 = 1;
 639   3            }
 640   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 641   2            {
 642   3              SEG3 = 0;
 643   3              SEG4 = 1;
 644   3            }
 645   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 646   2            {
 647   3              SEG3 = 0;
 648   3              SEG4 = 1;
 649   3            }
 650   2            break;
 651   2          case Clear_lcd:
 652   2            SEG1 = 0;
 653   2            SEG2 = 0;
 654   2            SEG3 = 0;
 655   2            SEG4 = 0;
 656   2            SEG5 = 0;
 657   2            break;
 658   2          case all_on:
 659   2            SEG1 = 1;
 660   2            SEG2 = 1;
 661   2            SEG3 = 1;
 662   2            SEG4 = 1;
 663   2            SEG5 = 1;
 664   2            break;
 665   2        }
 666   1      
 667   1      }
 668          
 669          void set_time ( u8 number )
 670          {
 671   1        switch ( number )
 672   1        {
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 12  

 673   2          case TIMER_ON:
 674   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 675   2            {
 676   3              SEG1 = 0;
 677   3              SEG2 = 0;
 678   3              SEG5 = 0;
 679   3            }
 680   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 681   2            {
 682   3              SEG1 = 1;
 683   3              SEG2 = 1;
 684   3              SEG5 = 1;
 685   3            }
 686   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 687   2            {
 688   3              SEG1 = 0;
 689   3              SEG2 = 1;
 690   3              SEG5 = 0;
 691   3            }
 692   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 693   2            {
 694   3              SEG1 = 1;
 695   3              SEG2 = 1;
 696   3              SEG5 = 1;
 697   3            }
 698   2      
 699   2            break;
 700   2          case TIMER_0_5H:
 701   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 702   2            {
 703   3              SEG1 = 1;
 704   3              SEG2 = 0;
 705   3              SEG5 = 0;
 706   3            }
 707   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 708   2            {
 709   3              SEG1 = 1;
 710   3              SEG2 = 1;
 711   3              SEG5 = 1;
 712   3            }
 713   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 714   2            {
 715   3              SEG1 = 0;
 716   3              SEG2 = 0;
 717   3              SEG5 = 0;
 718   3            }
 719   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 720   2            {
 721   3              SEG1 = 1;
 722   3              SEG2 = 1;
 723   3              SEG5 = 1;
 724   3            }
 725   2            break;
 726   2      
 727   2          case TIMER_1H:
 728   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 729   2            {
 730   3              SEG1 = 0;
 731   3              SEG2 = 0;
 732   3              SEG5 = 0;
 733   3            }
 734   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 13  

 735   2            {
 736   3              SEG1 = 1;
 737   3              SEG2 = 1;
 738   3              SEG5 = 1;
 739   3            }
 740   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 741   2            {
 742   3              SEG1 = 1;
 743   3              SEG2 = 0;
 744   3              SEG5 = 0;
 745   3            }
 746   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 747   2            {
 748   3              SEG1 = 1;
 749   3              SEG2 = 1;
 750   3              SEG5 = 1;
 751   3            }
 752   2            break;
 753   2      
 754   2          case TIMER_2H:
 755   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 756   2            {
 757   3              SEG1 = 0;
 758   3              SEG2 = 0;
 759   3              SEG5 = 1;
 760   3            }
 761   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 762   2            {
 763   3              SEG1 = 1;
 764   3              SEG2 = 1;
 765   3              SEG5 = 1;
 766   3            }
 767   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 768   2            {
 769   3              SEG1 = 0;
 770   3              SEG2 = 0;
 771   3              SEG5 = 0;
 772   3            }
 773   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 774   2            {
 775   3              SEG1 = 1;
 776   3              SEG2 = 1;
 777   3              SEG5 = 1;
 778   3            }
 779   2            break;
 780   2          case TIMER_4H:
 781   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 782   2            {
 783   3              SEG1 = 0;
 784   3              SEG2 = 1;
 785   3              SEG5 = 0;
 786   3            }
 787   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 788   2            {
 789   3              SEG1 = 1;
 790   3              SEG2 = 1;
 791   3              SEG5 = 1;
 792   3            }
 793   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 794   2            {
 795   3              SEG1 = 0;
 796   3              SEG2 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 14  

 797   3              SEG5 = 0;
 798   3            }
 799   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 800   2            {
 801   3              SEG1 = 1;
 802   3              SEG2 = 1;
 803   3              SEG5 = 1;
 804   3            }
 805   2            break;
 806   2          case TIMER_8H:
 807   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 808   2            {
 809   3              SEG1 = 0;
 810   3              SEG2 = 0;
 811   3              SEG5 = 0;
 812   3            }
 813   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 814   2            {
 815   3              SEG1 = 1;
 816   3              SEG2 = 1;
 817   3              SEG5 = 1;
 818   3            }
 819   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 820   2            {
 821   3              SEG1 = 0;
 822   3              SEG2 = 0;
 823   3              SEG5 = 1;
 824   3            }
 825   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 826   2            {
 827   3              SEG1 = 1;
 828   3              SEG2 = 1;
 829   3              SEG5 = 1;
 830   3            }
 831   2            break;
 832   2            case TIMER_OFF:
 833   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 834   2            {
 835   3              SEG1 = 0;
 836   3              SEG2 = 0;
 837   3              SEG5 = 0;
 838   3            }
 839   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 840   2            {
 841   3              SEG1 = 0;
 842   3              SEG2 = 0;
 843   3              SEG5 = 0;
 844   3            }
 845   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 846   2            {
 847   3              SEG1 = 0;
 848   3              SEG2 = 0;
 849   3              SEG5 = 0;
 850   3            }
 851   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 852   2            {
 853   3              SEG1 = 0;
 854   3              SEG2 = 0;
 855   3              SEG5 = 0;
 856   3            }
 857   2            break;
 858   2        }
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        11/07/2020 10:13:47 PAGE 15  

 859   1      
 860   1      }
 861          
 862          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1561    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
