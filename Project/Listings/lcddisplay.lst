C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCDDISPLAY
OBJECT MODULE PLACED IN .\Objects\lcddisplay.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\hardware\LCDdisplay\lcddisplay.c LARGE OPTIMIZE(8,SPEED) BR
                    -OWSE INCDIR(..\hardware\DELAY;..\hardware\ADC;..\hardware\Flash;..\hardware\Uart;..\hardware\Key;..\hardware\Pwm;..\hard
                    -ware\WDT;..\hardware\Timer;..\hardware\LCDdisplay;..\hardware\PID) DEBUG OBJECTEXTEND PRINT(.\Listings\lcddisplay.lst) T
                    -ABS(2) OBJECT(.\Objects\lcddisplay.obj)

line level    source

   1          #include "lcddisplay.h"
   2          #include "flash.h"
   3          
   4          display_set lcd_set = {0,0};
   5          
   6          unsigned char guc_DisFreshStep = 0;
   7          unsigned char LCD_STD = 0;
   8          void set_gap ( u8 gap );
   9          void set_time ( u8 temp );
  10          
  11          void LCD_Init ( void )
  12          {
  13   1        /***********************************LCD配置初始化**************************************/
  14   1        LCDCON |= 0xE8;                     //使能LCD，50K电阻，1/3bias
  15   1        COMP1EN |= 0x06;                    //COM使能P11 P12
  16   1        COMP2EN |= 0x08;                    //COM使能P23
  17   1        COMP3EN |= 0x10;                    //COM使能P34
  18   1      
  19   1        SEGP1EN |= 0xF8;                    //SEG口使能P1口，P17 P16 P15 P14 P13 为SEG1 SEG2 SEG3 SEG4 SEG5
  20   1      
  21   1        SEG1 = 0;
  22   1        SEG2 = 0;
  23   1        SEG3 = 0;
  24   1        SEG4 = 0;
  25   1        SEG5 = 0;
  26   1      }
  27          
  28          void lcd_off(u8 std)
  29          {
  30   1       LCD_STD = std;
  31   1      }
  32          
  33          void lcd_clear_all ( void )
  34          {
  35   1        
  36   1        lcd_set.gap_display = Clear_lcd;
  37   1        lcd_set.time_display = Clear_lcd;
  38   1      }
  39          void lcd_error ( void )
  40          {
  41   1        static u8 error_std = 0;
  42   1        if ( error_std == 0 )
  43   1        {
  44   2          
  45   2          lcd_set.gap_display = Clear_lcd;
  46   2          lcd_set.time_display = Clear_lcd;
  47   2          error_std = 1;
  48   2        }
  49   1        else if ( error_std == 1 )
  50   1        {
  51   2          
  52   2          lcd_set.gap_display = Error;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 2   

  53   2          error_std = 0;
  54   2        }
  55   1      
  56   1      }
  57          void lcd_display_time ( u8 time )
  58          {
  59   1        
  60   1        lcd_set.time_display = time;
  61   1      }
  62          
  63          void lcd_display_gap ( u8 gap )
  64          {
  65   1       
  66   1        lcd_set.gap_display = gap;
  67   1      
  68   1      }
  69          void lcd_display_On ( void )
  70          {
  71   1      
  72   1        lcd_set.gap_display = all_on;
  73   1        lcd_set.time_display = all_on;
  74   1      }
  75          
  76          
  77          
  78          
  79          void LCD_Display ( void )
  80          {
  81   1       if ( (LCD_STD == ON)||(LCD_STD == Error))
  82   1         {
  83   2           LCDCON |= 0xE8;
  84   2        switch ( guc_DisFreshStep )
  85   2        {
  86   3          case Frame0_COM0:
  87   3          
  88   3          LCDCON &=~ 0x10;   //FRAME 0
  89   3      
  90   3            COM0 = 1;
  91   3            COM1 = 0;
  92   3            COM2 = 0;
  93   3            COM3 = 0;
  94   3      
  95   3            set_time ( lcd_set.time_display );
  96   3            set_gap ( lcd_set.gap_display );
  97   3            guc_DisFreshStep = Frame0_COM1;
  98   3            break;
  99   3          case Frame0_COM1:
 100   3            COM0 = 0;
 101   3            COM1 = 1;
 102   3            COM2 = 0;
 103   3            COM3 = 0;
 104   3            set_time ( lcd_set.time_display );
 105   3            set_gap ( lcd_set.gap_display );
 106   3            guc_DisFreshStep = Frame0_COM2;
 107   3            break;
 108   3          case Frame0_COM2:
 109   3      
 110   3            COM0 = 0;
 111   3            COM1 = 0;
 112   3            COM2 = 1;
 113   3            COM3 = 0;
 114   3      
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 3   

 115   3            set_time ( lcd_set.time_display );
 116   3            set_gap ( lcd_set.gap_display );
 117   3            guc_DisFreshStep = Frame0_COM3;
 118   3            break;
 119   3          case Frame0_COM3:
 120   3      
 121   3            COM0 = 0;
 122   3            COM1 = 0;
 123   3            COM2 = 0;
 124   3            COM3 = 1;
 125   3            set_time ( lcd_set.time_display );
 126   3      
 127   3            set_gap ( lcd_set.gap_display );
 128   3            guc_DisFreshStep = Frame1_COM0;
 129   3            break;
 130   3          case Frame1_COM0:
 131   3            LCDCON |= 0x10;   //FRAME 1
 132   3      
 133   3            COM0 = 1;
 134   3            COM1 = 0;
 135   3            COM2 = 0;
 136   3            COM3 = 0;
 137   3      
 138   3      
 139   3            set_time ( lcd_set.time_display );
 140   3      
 141   3            set_gap ( lcd_set.gap_display );
 142   3      
 143   3            guc_DisFreshStep = Frame1_COM1;
 144   3            break;
 145   3          case Frame1_COM1:
 146   3      
 147   3            COM0 = 0;
 148   3            COM1 = 1;
 149   3            COM2 = 0;
 150   3            COM3 = 0;
 151   3            set_time ( lcd_set.time_display );
 152   3      
 153   3            set_gap ( lcd_set.gap_display );
 154   3            guc_DisFreshStep = Frame1_COM2;
 155   3            break;
 156   3          case Frame1_COM2:
 157   3      
 158   3            COM0 = 0;
 159   3            COM1 = 0;
 160   3            COM2 = 1;
 161   3            COM3 = 0;
 162   3            set_time ( lcd_set.time_display );
 163   3            set_gap ( lcd_set.gap_display );
 164   3            guc_DisFreshStep = Frame1_COM3;
 165   3            break;
 166   3          case Frame1_COM3:
 167   3      
 168   3            COM0 = 0;
 169   3            COM1 = 0;
 170   3            COM2 = 0;
 171   3            COM3 = 1;
 172   3      
 173   3      
 174   3            set_time ( lcd_set.time_display );
 175   3      
 176   3            set_gap ( lcd_set.gap_display );
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 4   

 177   3      
 178   3            guc_DisFreshStep = Frame0_COM0;
 179   3            break;
 180   3          default:
 181   3            guc_DisFreshStep = Frame0_COM0;
 182   3            break;
 183   3        }
 184   2       }
 185   1       else if (LCD_STD == OFF)
 186   1       {
 187   2          LCDCON = 0x68;
 188   2       }
 189   1      }
 190          
 191          //void LCD_Display_seg ( void )
 192          //{
 193          //
 194          //  switch ( guc_DisFreshStep )
 195          //  {
 196          //    case Frame0_SEG1:
 197          //      LCDCON &=~ 0x10;   //FRAME 0
 198          //
 199          //      SEG1 = 0;
 200          //      SEG2 = 0;
 201          //      SEG3 = 0;
 202          //      SEG4 = 0;
 203          //      SEG5 = 1;
 204          //
 205          //      COM0 = 0;
 206          //      COM1 = 0;
 207          //      COM2 = 1;
 208          //      COM3 = 0;
 209          //
 210          //
 211          //      guc_DisFreshStep = Frame0_SEG2;
 212          //      break;
 213          //    case Frame0_SEG2:
 214          //      SEG1 = 0;
 215          //      SEG2 = 0;
 216          //      SEG3 = 0;
 217          //      SEG4 = 1;
 218          //      SEG5 = 0;
 219          //
 220          //      COM0 = 0;
 221          //      COM1 = 1;
 222          //      COM2 = 1;
 223          //      COM3 = 1;
 224          //      guc_DisFreshStep = Frame0_SEG3;
 225          //      break;
 226          //    case Frame0_SEG3:
 227          //      SEG1 = 0;
 228          //      SEG2 = 0;
 229          //      SEG3 = 1;
 230          //      SEG4 = 0;
 231          //      SEG5 = 0;
 232          //
 233          //      COM0 = 1;
 234          //      COM1 = 1;
 235          //      COM2 = 1;
 236          //      COM3 = 1;
 237          //
 238          //      guc_DisFreshStep = Frame0_SEG4;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 5   

 239          //      break;
 240          //    case Frame0_SEG4:
 241          //      SEG1 = 0;
 242          //      SEG2 = 1;
 243          //      SEG3 = 0;
 244          //      SEG4 = 0;
 245          //      SEG5 = 0;
 246          //
 247          //
 248          //      COM0 = 0;
 249          //      COM1 = 0;
 250          //      COM2 = 0;
 251          //      COM3 = 0;
 252          //      guc_DisFreshStep = Frame0_SEG5;
 253          //      break;
 254          //    case Frame0_SEG5:
 255          //      SEG1 = 1;
 256          //      SEG2 = 0;
 257          //      SEG3 = 0;
 258          //      SEG4 = 0;
 259          //      SEG5 = 0;
 260          //
 261          //
 262          //      COM0 = 0;
 263          //      COM1 = 0;
 264          //      COM2 = 0;
 265          //      COM3 = 0;
 266          //      guc_DisFreshStep = Frame1_SEG1;
 267          //      break;
 268          //    case Frame1_SEG1:
 269          //      LCDCON |= 0x10;   //FRAME 1
 270          //      SEG1 = 0;
 271          //      SEG2 = 0;
 272          //      SEG3 = 0;
 273          //      SEG4 = 0;
 274          //      SEG5 = 1;
 275          //
 276          //
 277          //
 278          //
 279          //
 280          //      COM0 = 0;
 281          //      COM1 = 0;
 282          //      COM2 = 0;
 283          //      COM3 = 0;
 284          //
 285          //      guc_DisFreshStep = Frame1_SEG2;
 286          //      break;
 287          //    case Frame1_SEG2:
 288          //      SEG1 = 0;
 289          //      SEG2 = 0;
 290          //      SEG3 = 0;
 291          //      SEG4 = 1;
 292          //      SEG5 = 0;
 293          //
 294          //
 295          //      COM0 = 0;
 296          //      COM1 = 1;
 297          //      COM2 = 1;
 298          //      COM3 = 1;
 299          //
 300          //      guc_DisFreshStep = Frame1_SEG3;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 6   

 301          //      break;
 302          //    case Frame1_SEG3:
 303          //      SEG1 = 0;
 304          //      SEG2 = 0;
 305          //      SEG3 = 1;
 306          //      SEG4 = 0;
 307          //      SEG5 = 0;
 308          //
 309          //      COM0 = 1;
 310          //      COM1 = 1;
 311          //      COM2 = 1;
 312          //      COM3 = 1;
 313          //
 314          //
 315          //      guc_DisFreshStep = Frame1_SEG4;
 316          //      break;
 317          //    case Frame1_SEG4:
 318          //      SEG1 = 0;
 319          //      SEG2 = 1;
 320          //      SEG3 = 0;
 321          //      SEG4 = 0;
 322          //      SEG5 = 0;
 323          //
 324          //
 325          //
 326          //
 327          //      COM0 = 0;
 328          //      COM1 = 0;
 329          //      COM2 = 0;
 330          //      COM3 = 0;
 331          //
 332          //
 333          //      guc_DisFreshStep = Frame1_SEG5;
 334          //      break;
 335          //    case Frame1_SEG5:
 336          //      SEG1 = 1;
 337          //      SEG2 = 0;
 338          //      SEG3 = 0;
 339          //      SEG4 = 0;
 340          //      SEG5 = 0;
 341          //
 342          //
 343          //
 344          //      COM0 = 0;
 345          //      COM1 = 0;
 346          //      COM2 = 0;
 347          //      COM3 = 0;
 348          //
 349          //
 350          //
 351          //
 352          //      guc_DisFreshStep = Frame0_SEG1;
 353          //      break;
 354          //    default:
 355          //      guc_DisFreshStep = Frame0_SEG1;
 356          //      break;
 357          //  }
 358          //}
 359          
 360          
 361          //void set_time(void)
 362          //{
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 7   

 363          //
 364          
 365          
 366          //}
 367          void set_gap ( u8 number )
 368          {
 369   1        switch ( number )
 370   1        {
 371   2          case GAP_WARM_temp:
 372   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 373   2            {
 374   3      
 375   3              SEG3 = 0;
 376   3              SEG4 = 0;
 377   3            }
 378   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 379   2            {
 380   3              SEG3 = 1;
 381   3              SEG4 = 1;
 382   3            }
 383   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 384   2            {
 385   3              SEG3 = 1;
 386   3              SEG4 = 1;
 387   3            }
 388   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 389   2            {
 390   3              SEG3 = 0;
 391   3              SEG4 = 1;
 392   3            }
 393   2      
 394   2            break;
 395   2          case GAP_1:
 396   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 397   2            {
 398   3      
 399   3              SEG3 = 0;
 400   3              SEG4 = 0;
 401   3            }
 402   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 403   2            {
 404   3              SEG3 = 1;
 405   3              SEG4 = 0;
 406   3            }
 407   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 408   2            {
 409   3              SEG3 = 1;
 410   3              SEG4 = 0;
 411   3            }
 412   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 413   2            {
 414   3              SEG3 = 0;
 415   3              SEG4 = 0;
 416   3            }
 417   2            break;
 418   2      
 419   2          case GAP_2:
 420   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 421   2            {
 422   3      
 423   3              SEG3 = 1;
 424   3              SEG4 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 8   

 425   3            }
 426   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 427   2            {
 428   3              SEG3 = 1;
 429   3              SEG4 = 0;
 430   3            }
 431   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 432   2            {
 433   3              SEG3 = 0;
 434   3              SEG4 = 1;
 435   3            }
 436   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 437   2            {
 438   3              SEG3 = 1;
 439   3              SEG4 = 1;
 440   3            }
 441   2            break;
 442   2      
 443   2          case GAP_3:
 444   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 445   2            {
 446   3      
 447   3              SEG3 = 1;
 448   3              SEG4 = 0;
 449   3            }
 450   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 451   2            {
 452   3              SEG3 = 1;
 453   3              SEG4 = 0;
 454   3            }
 455   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 456   2            {
 457   3              SEG3 = 1;
 458   3              SEG4 = 1;
 459   3            }
 460   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 461   2            {
 462   3              SEG3 = 1;
 463   3              SEG4 = 0;
 464   3            }
 465   2            break;
 466   2          case GAP_4:
 467   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 468   2            {
 469   3      
 470   3              SEG3 = 0;
 471   3              SEG4 = 0;
 472   3            }
 473   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 474   2            {
 475   3              SEG3 = 1;
 476   3              SEG4 = 1;
 477   3            }
 478   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 479   2            {
 480   3              SEG3 = 1;
 481   3              SEG4 = 1;
 482   3            }
 483   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 484   2            {
 485   3              SEG3 = 0;
 486   3              SEG4 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 9   

 487   3            }
 488   2            break;
 489   2          case GAP_5:
 490   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 491   2            {
 492   3      
 493   3              SEG3 = 1;
 494   3              SEG4 = 0;
 495   3            }
 496   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 497   2            {
 498   3              SEG3 = 0;
 499   3              SEG4 = 1;
 500   3            }
 501   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 502   2            {
 503   3              SEG3 = 1;
 504   3              SEG4 = 1;
 505   3            }
 506   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 507   2            {
 508   3              SEG3 = 1;
 509   3              SEG4 = 0;
 510   3            }
 511   2            break;
 512   2          case GAP_6:
 513   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 514   2            {
 515   3      
 516   3              SEG3 = 1;
 517   3              SEG4 = 0;
 518   3            }
 519   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 520   2            {
 521   3              SEG3 = 0;
 522   3              SEG4 = 1;
 523   3            }
 524   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 525   2            {
 526   3              SEG3 = 1;
 527   3              SEG4 = 1;
 528   3            }
 529   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 530   2            {
 531   3              SEG3 = 1;
 532   3              SEG4 = 1;
 533   3            }
 534   2            break;
 535   2          case GAP_7:
 536   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 537   2            {
 538   3      
 539   3              SEG3 = 1;
 540   3              SEG4 = 0;
 541   3            }
 542   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 543   2            {
 544   3              SEG3 = 1;
 545   3              SEG4 = 0;
 546   3            }
 547   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 548   2            {
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 10  

 549   3              SEG3 = 1;
 550   3              SEG4 = 0;
 551   3            }
 552   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 553   2            {
 554   3              SEG3 = 0;
 555   3              SEG4 = 0;
 556   3            }
 557   2            break;
 558   2          case GAP_8:
 559   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 560   2            {
 561   3      
 562   3              SEG3 = 1;
 563   3              SEG4 = 0;
 564   3            }
 565   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 566   2            {
 567   3              SEG3 = 1;
 568   3              SEG4 = 1;
 569   3            }
 570   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 571   2            {
 572   3              SEG3 = 1;
 573   3              SEG4 = 1;
 574   3            }
 575   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 576   2            {
 577   3              SEG3 = 1;
 578   3              SEG4 = 1;
 579   3            }
 580   2            break;
 581   2          case GAP_9:
 582   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 583   2            {
 584   3      
 585   3              SEG3 = 1;
 586   3              SEG4 = 0;
 587   3            }
 588   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 589   2            {
 590   3              SEG3 = 1;
 591   3              SEG4 = 1;
 592   3            }
 593   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 594   2            {
 595   3              SEG3 = 1;
 596   3              SEG4 = 1;
 597   3            }
 598   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 599   2            {
 600   3              SEG3 = 1;
 601   3              SEG4 = 0;
 602   3            }
 603   2            break;
 604   2          case Error:
 605   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 606   2            {
 607   3      
 608   3              SEG3 = 1;
 609   3              SEG4 = 0;
 610   3            }
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 11  

 611   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 612   2            {
 613   3              SEG3 = 0;
 614   3              SEG4 = 1;
 615   3            }
 616   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 617   2            {
 618   3              SEG3 = 0;
 619   3              SEG4 = 1;
 620   3            }
 621   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 622   2            {
 623   3              SEG3 = 0;
 624   3              SEG4 = 1;
 625   3            }
 626   2            break;
 627   2          case Clear_lcd:
 628   2            SEG1 = 0;
 629   2            SEG2 = 0;
 630   2            SEG3 = 0;
 631   2            SEG4 = 0;
 632   2            SEG5 = 0;
 633   2            break;
 634   2          case all_on:
 635   2            SEG1 = 1;
 636   2            SEG2 = 1;
 637   2            SEG3 = 1;
 638   2            SEG4 = 1;
 639   2            SEG5 = 1;
 640   2            break;
 641   2        }
 642   1      
 643   1      }
 644          
 645          void set_time ( u8 number )
 646          {
 647   1        switch ( number )
 648   1        {
 649   2          case TIMER_ON:
 650   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 651   2            {
 652   3              SEG1 = 0;
 653   3              SEG2 = 0;
 654   3              SEG5 = 0;
 655   3            }
 656   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 657   2            {
 658   3              SEG1 = 1;
 659   3              SEG2 = 1;
 660   3              SEG5 = 1;
 661   3            }
 662   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 663   2            {
 664   3              SEG1 = 0;
 665   3              SEG2 = 1;
 666   3              SEG5 = 0;
 667   3            }
 668   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 669   2            {
 670   3              SEG1 = 1;
 671   3              SEG2 = 1;
 672   3              SEG5 = 1;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 12  

 673   3            }
 674   2      
 675   2            break;
 676   2          case TIMER_0_5H:
 677   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 678   2            {
 679   3              SEG1 = 1;
 680   3              SEG2 = 0;
 681   3              SEG5 = 0;
 682   3            }
 683   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 684   2            {
 685   3              SEG1 = 1;
 686   3              SEG2 = 1;
 687   3              SEG5 = 1;
 688   3            }
 689   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 690   2            {
 691   3              SEG1 = 0;
 692   3              SEG2 = 0;
 693   3              SEG5 = 0;
 694   3            }
 695   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 696   2            {
 697   3              SEG1 = 1;
 698   3              SEG2 = 1;
 699   3              SEG5 = 1;
 700   3            }
 701   2            break;
 702   2      
 703   2          case TIMER_1H:
 704   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 705   2            {
 706   3              SEG1 = 0;
 707   3              SEG2 = 0;
 708   3              SEG5 = 0;
 709   3            }
 710   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 711   2            {
 712   3              SEG1 = 1;
 713   3              SEG2 = 1;
 714   3              SEG5 = 1;
 715   3            }
 716   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 717   2            {
 718   3              SEG1 = 1;
 719   3              SEG2 = 0;
 720   3              SEG5 = 0;
 721   3            }
 722   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 723   2            {
 724   3              SEG1 = 1;
 725   3              SEG2 = 1;
 726   3              SEG5 = 1;
 727   3            }
 728   2            break;
 729   2      
 730   2          case TIMER_2H:
 731   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 732   2            {
 733   3              SEG1 = 0;
 734   3              SEG2 = 0;
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 13  

 735   3              SEG5 = 1;
 736   3            }
 737   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 738   2            {
 739   3              SEG1 = 1;
 740   3              SEG2 = 1;
 741   3              SEG5 = 1;
 742   3            }
 743   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 744   2            {
 745   3              SEG1 = 0;
 746   3              SEG2 = 0;
 747   3              SEG5 = 0;
 748   3            }
 749   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 750   2            {
 751   3              SEG1 = 1;
 752   3              SEG2 = 1;
 753   3              SEG5 = 1;
 754   3            }
 755   2            break;
 756   2          case TIMER_4H:
 757   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 758   2            {
 759   3              SEG1 = 0;
 760   3              SEG2 = 1;
 761   3              SEG5 = 0;
 762   3            }
 763   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 764   2            {
 765   3              SEG1 = 1;
 766   3              SEG2 = 1;
 767   3              SEG5 = 1;
 768   3            }
 769   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 770   2            {
 771   3              SEG1 = 0;
 772   3              SEG2 = 0;
 773   3              SEG5 = 0;
 774   3            }
 775   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 776   2            {
 777   3              SEG1 = 1;
 778   3              SEG2 = 1;
 779   3              SEG5 = 1;
 780   3            }
 781   2            break;
 782   2          case TIMER_8H:
 783   2            if ( ( guc_DisFreshStep ==  Frame0_COM0 ) || ( guc_DisFreshStep == Frame1_COM0 ) )
 784   2            {
 785   3              SEG1 = 0;
 786   3              SEG2 = 0;
 787   3              SEG5 = 0;
 788   3            }
 789   2            if ( ( guc_DisFreshStep ==  Frame0_COM1 ) || ( guc_DisFreshStep == Frame1_COM1 ) )
 790   2            {
 791   3              SEG1 = 1;
 792   3              SEG2 = 1;
 793   3              SEG5 = 1;
 794   3            }
 795   2            if ( ( guc_DisFreshStep ==  Frame0_COM2 ) || ( guc_DisFreshStep == Frame1_COM2 ) )
 796   2            {
C51 COMPILER V9.56.0.0   LCDDISPLAY                                                        08/26/2020 19:34:26 PAGE 14  

 797   3              SEG1 = 0;
 798   3              SEG2 = 0;
 799   3              SEG5 = 1;
 800   3            }
 801   2            if ( ( guc_DisFreshStep ==  Frame0_COM3 ) || ( guc_DisFreshStep == Frame1_COM3 ) )
 802   2            {
 803   3              SEG1 = 1;
 804   3              SEG2 = 1;
 805   3              SEG5 = 1;
 806   3            }
 807   2            break;
 808   2        }
 809   1      
 810   1      }
 811          
 812          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1436    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
