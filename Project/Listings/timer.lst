C51 COMPILER V9.56.0.0   TIMER                                                             09/04/2020 18:31:49 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\hardware\Timer\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDI
                    -R(..\hardware\DELAY;..\hardware\ADC;..\hardware\Flash;..\hardware\Uart;..\hardware\Key;..\hardware\Pwm;..\hardware\WDT;.
                    -.\hardware\Timer;..\hardware\LCDdisplay;..\hardware\PID) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) TABS(2) OBJECT(.
                    -\Objects\timer.obj)

line level    source

   1          #include "timer.h"
   2          #include "flash.h"
   3          #include "uart.h"
   4          #include "lcddisplay.h"
   5          #include "key.h"
   6          //----------------time---------------
   7          u16 time_cnt = 0;
   8          u16 time_sec = 0;
   9          u16 cnt_heat_time = 0;
  10          u8 over_rang_time_std = 0;
  11          u8 Gap_protect_std = 0 ;
  12          u8 On_stay = 0;
  13          
  14          u8 Heat_start_std = 0;
  15          u16 time_heat = 0;
  16          u16 temp_time = 0 ,cail_cnt = 0 ;
  17          u8  heat_step = 0;
  18          void set_time_sec_val ( u16 sec )
  19          {
  20   1        time_sec = sec;
  21   1        time_cnt = 0;
  22   1        gm_printf ( "set time second:%d\r\n",sec );
  23   1      }
  24          
  25          
  26          static void set_heat_val ( void )
  27          {
  28   1        if ( Heat_start_std == 1 )
  29   1        {
  30   2          if ( ++time_heat > Heat_Value )
  31   2          {
  32   3            //KEY_printf ( "exchange_heat_value \r\n" );
  33   3            Heat_start_std = 0;
  34   3            time_heat = 0;
  35   3      
  36   3             heat_step = 0;
  37   3          }
  38   2        }
  39   1      }
  40          
  41          void set_time_sec ( void )
  42          {
  43   1        time_cnt = 0;
  44   1        if ( flash_info.timer == TIMER_ON )
  45   1        {
  46   2          time_sec = 0;
  47   2          cnt_heat_time = 0;
  48   2          temp_time = 0;
  49   2        }
  50   1        else if ( flash_info.timer == TIMER_0_5H )
  51   1        {
  52   2          time_sec = 30*60;
C51 COMPILER V9.56.0.0   TIMER                                                             09/04/2020 18:31:49 PAGE 2   

  53   2          cnt_heat_time = 0;
  54   2          temp_time = 0;
  55   2        }
  56   1        else if ( flash_info.timer == TIMER_1H )
  57   1        {
  58   2          time_sec = 60*60;
  59   2          cnt_heat_time = 0;
  60   2          temp_time = 0;
  61   2        }
  62   1        else if ( flash_info.timer == TIMER_2H )
  63   1        {
  64   2          time_sec = 2*60*60;
  65   2          cnt_heat_time = 0;
  66   2          temp_time = 0;
  67   2        }
  68   1        else if ( flash_info.timer == TIMER_4H )
  69   1        {
  70   2          time_sec = 4*60*60;
  71   2          cnt_heat_time = 0;
  72   2          temp_time = 0;
  73   2        }
  74   1        else if ( flash_info.timer == TIMER_8H )
  75   1        {
  76   2          time_sec = 8*60*60;
  77   2          cnt_heat_time = 0;
  78   2          temp_time = 0;
  79   2        }
  80   1        gm_printf ( "time second:%d \r\n",time_sec );
  81   1      }
  82          
  83          
  84          void time0_init ( void )
  85          {
  86   1        /**********************************TIM0配置初始化**************************************/
  87   1        TCON1 = 0x00;           //Tx0定时器时钟为Fosc/12
  88   1        TMOD = 0x00;            //16位重装载定时器/计数器
  89   1      
  90   1        //Tim0计算时间  = (65536 - 0xFACB) * (1 / (Fosc /Timer分频系数))
  91   1        //        = 1333 / (16000000 / 12)
  92   1        //        = 1 ms
  93   1      
  94   1        //定时1ms
  95   1        //反推初值  = 65536 - ((1/1000) / (1/(Fosc / Timer分频系数)))
  96   1        //        = 65536 - ((1/1000) / (1/(16000000 / 12)))
  97   1        //      = 65536 - 1333
  98   1        //      = 0xFACB
  99   1      //    TH0 = 0xCB;  10ms
 100   1      //  TL0 = 0xEB;
 101   1        TH0 = 0xF5;
 102   1        TL0 = 0x96;             //T0定时时间2ms     0x96     10ms   0xFB
 103   1        IE |= 0x02;             //打开T0中断
 104   1        TCON |= 0x10;           //使能T0
 105   1      }
 106          
 107          
 108          
 109          //10ms
 110          void TIMER0_Rpt ( void ) interrupt TIMER0_VECTOR
 111          {
 112   1        if ( get_device_state() == ON ) //flash_info.timer != TIMER_ON &&
 113   1        {
 114   2          time_cnt++;
C51 COMPILER V9.56.0.0   TIMER                                                             09/04/2020 18:31:49 PAGE 3   

 115   2          if ( time_cnt >= 500 )
 116   2          {
 117   3            set_heat_val();
 118   3      
 119   3            if ( On_stay == 2 )  // stay on 模式下进行保护
 120   3            {
 121   4              cnt_heat_time++;
 122   4              if ( cnt_heat_time > overrang_time )
 123   4              {
 124   5                On_stay = 0;
 125   5                cnt_heat_time = 0;
 126   5                over_rang_time_std = 1;
 127   5                //gm_printf ( "On_stay_overrang \r\n" );
 128   5              }
 129   4      
 130   4            }
 131   3            if ( time_sec > 0 )
 132   3            {
 133   4      
 134   4              time_sec--;
 135   4              if ( Gap_protect_std == 2 )
 136   4              {
 137   5      
 138   5                cnt_heat_time++;
 139   5      
 140   5      
 141   5                if ( cnt_heat_time > overrang_time )
 142   5                {
 143   6                  over_rang_time_std = 1;
 144   6                  Gap_protect_std = 0;
 145   6                  cnt_heat_time = 0;
 146   6                  //gm_printf ( "protect \r\n" );
 147   6                }
 148   5              }
 149   4            }
 150   3            else
 151   3            {
 152   4              if ( flash_info.timer != TIMER_ON )
 153   4              {
 154   5                set_device_state ( OFF );
 155   5                time_sec = 0;
 156   5                cnt_heat_time = 0;
 157   5                Gap_protect_std = 0;
 158   5                On_stay = 0;
 159   5                //ht1621_all_clear(); //定时时间到
 160   5                gm_printf ( "time off \r\n" );
 161   5              }
 162   4            }
 163   3            //  gm_printf("time_sec=%d \r\n",time_sec);
 164   3            time_cnt = 0;
 165   3          }
 166   2        }
 167   1        else if (calibration_std == 1)
 168   1        {
 169   2          if (++cail_cnt > cail_value)
 170   2          {
 171   3            calibration_std = 0;
 172   3            cail_cnt = 0;
 173   3            
 174   3          }
 175   2        }
 176   1        LCD_Display();
C51 COMPILER V9.56.0.0   TIMER                                                             09/04/2020 18:31:49 PAGE 4   

 177   1        
 178   1      }
 179          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    556    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =     17    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
